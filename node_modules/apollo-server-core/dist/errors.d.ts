import { GraphQLError } from 'graphql';
export declare class ApolloError extends Error {
    extensions: any;
    constructor(message: string, code?: string, properties?: Record<string, any>);
}
export declare function internalFormatError(error: GraphQLError, debug?: boolean): GraphQLError;
export declare function toApolloError(error: Error, code?: string): Error & {
    extensions: Record<string, any>;
};
export interface ErrorOptions {
    code?: string;
    errorClass?: typeof ApolloError;
}
export declare function fromGraphQLError(error: GraphQLError, options?: ErrorOptions): GraphQLError;
export declare class SyntaxError extends ApolloError {
    constructor(message: string);
}
export declare class ValidationError extends ApolloError {
    constructor(message: string);
}
export declare class AuthenticationError extends ApolloError {
    constructor(message: string);
}
export declare class ForbiddenError extends ApolloError {
    constructor(message: string);
}
